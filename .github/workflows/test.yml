name: Test HDL
on:
  push:
  pull_request:

permissions:
  contents: read

# Avoid multiple tests running on the same reference
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  verilator-test:
    runs-on: ubuntu-24.04
    env:
      VERILATOR_REF: "29fb82d3b792369dad7d488b8191071e3c01076f"
    steps:
      - name: Clone yosys repo for simulation sources
        uses: actions/checkout@v4
        with:
          repository: YosysHQ/yosys
          path: ./yosys
          ref: main
          sparse-checkout: techlibs/xilinx/cells_sim.v

      - name: Copy cells_sim.v to /usr/share/yosys/xilinx/
        run: |
          sudo mkdir -p /usr/share/yosys/xilinx
          sudo cp ./yosys/techlibs/xilinx/cells_sim.v /usr/share/yosys/xilinx/
          rm -rf yosys

      - name: Cache verilator
        id: cache-verilator
        uses: actions/cache@v4
        with:
          path: |
            /usr/local/share/verilator
            /usr/local/bin/verilator
            /usr/local/bin/verilator_bin_dbg
            /usr/local/bin/verilator_coverage
            /usr/local/bin/verilator_gantt
            /usr/local/bin/verilator_profcfunc
            /usr/local/bin/verilator_bin
            /usr/local/bin/verilator_coverage_bin_dbg
          key: ${{ runner.os }}-verilator-${{ env.VERILATOR_REF }}

      - name: Get verilator source
        if: steps.cache-verilator.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          repository: verilator/verilator
          path: ./verilator
          ref: ${{ env.VERILATOR_REF }}

      - name: Install dependencies
        if: steps.cache-verilator.outputs.cache-hit == 'true'
        run: |
          sudo apt-get update
          sudo apt-get -y install \
            perl \
            python3 \
            make \
            libfl2 \
            zlib1g \
            mold \
            ccache \
            numactl

      - name: Install verilator
        if: steps.cache-verilator.outputs.cache-hit != 'true'
        working-directory: ./verilator
        run: |
          sudo apt-get update
          sudo apt-get -y install \
            git \
            help2man \
            perl \
            python3 \
            make \
            g++ \
            libfl2 \
            libfl-dev \
            zlib1g \
            zlib1g-dev \
            mold \
            ccache \
            libgoogle-perftools-dev \
            numactl \
            autoconf \
            flex \
            bison
          autoconf
          ./configure
          make -j "$(nproc)"
          sudo make install

      - name: Save verilator to cache
        uses: actions/cache/save@v4
        with:
          path: |
            /usr/local/share/verilator
            /usr/local/bin/verilator
            /usr/local/bin/verilator_bin_dbg
            /usr/local/bin/verilator_coverage
            /usr/local/bin/verilator_gantt
            /usr/local/bin/verilator_profcfunc
            /usr/local/bin/verilator_bin
            /usr/local/bin/verilator_coverage_bin_dbg
          key: ${{ steps.cache-verilator.outputs.cache-primary-key }}

      - uses: actions/checkout@v4
        with:
          path: ./analog-in-fw
      - name: Run tests
        run: make test
        working-directory: ./analog-in-fw

